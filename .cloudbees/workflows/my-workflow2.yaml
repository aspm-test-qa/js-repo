apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow2
on:
 push:
  branches:
   - "**"
 workflow_dispatch:
permissions:
 scm-token-own: read
 scm-token-org: read
 id-token: write
jobs:
 build:
  steps:
   - name: Get source code
     uses: cloudbees-io/checkout@v1
   - id: build-container
     name: Build container image
     uses: docker://gcr.io/kaniko-project/executor:debug
     run: |
      sed -i 's/golang:1\.23-alpine/golang:1.21-alpine/g' $CLOUDBEES_WORKSPACE/Dockerfile
      mkdir -p $CLOUDBEES_WORKSPACE/config
      mkdir -p $CLOUDBEES_WORKSPACE/public
      mkdir -p $CLOUDBEES_WORKSPACE/templates
      echo '{}' > $CLOUDBEES_WORKSPACE/config/config.json
      echo '# Public files' > $CLOUDBEES_WORKSPACE/public/README.md
      echo '# Templates' > $CLOUDBEES_WORKSPACE/templates/README.md
      /kaniko/executor --context $CLOUDBEES_WORKSPACE --build-arg USER=cbp-qa-automation,TOKEN=${{ secrets.GH_SECURITY_PAT }} --dockerfile $CLOUDBEES_WORKSPACE/Dockerfile --tar-path $CLOUDBEES_WORKSPACE/container-image.tar --no-push
   - id: register-artifact
     name: Register the artifact
     uses: cloudbees-io/register-build-artifact@v1
     with:
      name: js-repo
      version: CP-js01
      url: 020229604682.dkr.ecr.us-east-1.amazonaws.com/throwaway/actions/js-repo:CP-js01
   - name: Print output parameter artifact ID
     uses: docker://alpine:latest
     shell: sh
     run: |
      echo "artifact ID for js-repo:${{ cloudbees.version }} is: ${{ steps.register-artifact.outputs.artifact-id }}"